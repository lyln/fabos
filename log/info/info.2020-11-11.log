2020-11-11 14:23:42 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 14:23:42 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 33068 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 14:23:42 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 14:23:45 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 14:23:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 14:23:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 14:23:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 40ms. Found 0 Redis repository interfaces.
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$cf5114a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$67c4d444] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$2169b39f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$7935eca3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$a38b1069] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:47 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 14:23:47 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 14:23:48 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 14:23:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 14:23:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 14:23:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 14:23:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 14:23:50 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 14:23:50 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 14:23:50 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 14:23:50 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 14:23:50 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 14:23:50 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 7917 ms
2020-11-11 14:23:51 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 14:23:53 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 14:23:53 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 14:23:53 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 14:23:53 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 14:23:53 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 14:23:54 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 14:23:54 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 14:23:54 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 14:23:55 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 14:23:55 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 14:23:55 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 14:23:55 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 14:23:55 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 14:23:55 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 14:23:55 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 14:23:55 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 14.679 seconds (JVM running for 16.641)
2020-11-11 14:23:56 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 14:23:56 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 14:23:56 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 14:23:56 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 14:23:56 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.233.6:9090/login
2020-11-11 14:24:06 INFO  http-nio-9090-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 14:24:06 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-11-11 14:24:06 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 24 ms
2020-11-11 14:24:06 INFO  http-nio-9090-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-11-11 14:24:10 INFO  http-nio-9090-exec-4 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 14:24:27 INFO  http-nio-9090-exec-5 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 14:24:27 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 14:24:27 | 耗时 21 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 14:24:27 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 14:24:27 | 耗时 3 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '1');
2020-11-11 14:24:27 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 14:24:27 | 耗时 21 ms | SQL 语句：
INSERT INTO login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('admin', '2020-11-11T14:24:27.560+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Mac OS X 10_13_5', 'Chrome 86');
2020-11-11 14:24:27 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 14:24:27 | 耗时 5 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 14:24:27 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 14:24:27 | 耗时 7 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 14:24:27 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 14:24:27 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 15:41:20 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Validating all active sessions...
2020-11-11 15:41:20 INFO  SessionValidationThread-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Finished session validation.  No sessions were stopped.
2020-11-11 15:56:11 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 15:56:11 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 15:56:11 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 15:56:11 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 15:56:11 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 16:05:11 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:05:12 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 33823 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:05:12 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:05:17 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:05:20 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:05:20 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:05:20 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 133ms. Found 0 Redis repository interfaces.
2020-11-11 16:05:21 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:05:21 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 33825 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:05:21 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f8d40970] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$9147c914] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$4aeca86f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$a2b8e173] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$cd0e0539] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:23 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:05:23 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:05:24 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:05:24 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:05:24 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:05:24 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:05:24 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:05:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:25 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:05:25 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:05:25 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 53ms. Found 0 Redis repository interfaces.
2020-11-11 16:05:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:25 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$32e8a7ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$cb5c6791] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$850146ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:26 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:27 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:27 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$dccd7ff0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:27 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:27 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:27 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:27 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$722a3b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:27 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:27 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:27 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:05:27 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:05:28 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:05:28 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:05:28 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 16:05:28 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 16:05:28 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:05:28 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:05:28 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:05:28 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:05:28 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:28 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:28 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:28 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 16:05:28 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 16089 ms
2020-11-11 16:05:29 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:29 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:30 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:05:30 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:05:30 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:05:30 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 16:05:30 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 16:05:31 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 16:05:31 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 9533 ms
2020-11-11 16:05:31 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:05:32 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 16:05:32 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 16:05:33 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 16:05:33 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:05:33 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 16:05:34 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 16:05:35 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 16:05:35 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 16:05:35 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:05:35 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 16:05:35 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 16:05:35 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 16:05:35 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 16:05:35 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 16:05:35 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 16:05:36 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 16:05:36 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 16:05:36 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 16:05:36 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 16:05:36 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 16:05:36 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 26.331 seconds (JVM running for 28.266)
2020-11-11 16:05:37 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 16:05:37 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:05:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 16:05:37 INFO  main com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 16:05:37 INFO  main com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 16:05:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 16:05:37 INFO  main org.apache.coyote.http11.Http11NioProtocol Pausing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:05:37 INFO  main org.apache.catalina.core.StandardService Stopping service [Tomcat]
2020-11-11 16:05:37 INFO  main org.apache.coyote.http11.Http11NioProtocol Stopping ProtocolHandler ["http-nio-9090"]
2020-11-11 16:05:37 INFO  main org.apache.coyote.http11.Http11NioProtocol Destroying ProtocolHandler ["http-nio-9090"]
2020-11-11 16:05:37 INFO  main org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-11-11 16:05:37 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 16:05:37 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 16:05:37 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 16:05:37 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 16:05:37 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.161.247:9090/login
2020-11-11 16:07:09 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:07:09 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 16:07:09 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 16:07:09 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 16:07:09 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 16:07:17 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:07:17 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 33853 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:07:17 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:07:19 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:07:19 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:07:19 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:07:19 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 32ms. Found 0 Redis repository interfaces.
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e97cccff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$81f08ca3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3b956bfe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$9361a502] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:20 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$bdb6c8c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:21 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:07:21 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:07:21 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:07:21 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:07:21 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:07:21 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:07:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:23 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:23 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:07:23 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6270 ms
2020-11-11 16:07:24 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:07:35 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:07:35 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 33863 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:07:35 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:07:38 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:07:38 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:07:38 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:07:38 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 34ms. Found 0 Redis repository interfaces.
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5770798c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$efe43930] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a989188b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$155518f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$2baa7555] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:39 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:07:39 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:07:40 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:07:40 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:07:40 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:07:40 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:07:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:40 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:41 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:07:42 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:07:42 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:07:42 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 16:07:42 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 16:07:42 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 16:07:42 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6905 ms
2020-11-11 16:07:43 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:07:45 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 16:07:45 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 16:07:45 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 16:07:45 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:07:45 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 16:07:46 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 16:07:46 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 16:07:46 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 16:07:46 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 16:07:46 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 16:07:47 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 16:07:47 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 16:07:47 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 16:07:47 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 16:07:47 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 16:07:47 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 13.859 seconds (JVM running for 16.102)
2020-11-11 16:07:47 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 16:07:47 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 16:07:47 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 16:07:47 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 16:07:47 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.161.247:9090/login
2020-11-11 16:12:44 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:12:44 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 16:12:44 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 16:12:45 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 16:12:45 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 16:12:52 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:12:52 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 33976 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:12:52 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:12:54 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:12:55 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:12:55 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:12:55 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 33ms. Found 0 Redis repository interfaces.
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$eda40cab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$8617cc4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3fbcabaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$9788e4ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$c1de0874] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:12:56 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:12:56 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:12:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:12:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:12:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:12:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:12:58 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:12:58 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:12:58 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 16:12:58 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 16:12:58 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 16:12:58 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5943 ms
2020-11-11 16:12:58 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:13:00 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 16:13:00 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 16:13:00 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 16:13:00 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:13:00 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 16:13:01 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 16:13:01 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 16:13:01 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 16:13:01 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 16:13:01 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 16:13:01 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 16:13:01 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 16:13:01 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 16:13:01 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 16:13:01 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 16:13:02 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 10.8 seconds (JVM running for 12.428)
2020-11-11 16:13:02 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 16:13:02 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 16:13:02 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 16:13:02 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 16:13:02 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.161.247:9090/login
2020-11-11 16:13:15 INFO  http-nio-9090-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 16:13:15 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-11-11 16:13:15 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 47 ms
2020-11-11 16:13:15 INFO  http-nio-9090-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-11-11 16:13:23 INFO  http-nio-9090-exec-4 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:13:31 INFO  http-nio-9090-exec-5 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:13:31 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:13:31 | 耗时 48 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:13:31 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:13:31 | 耗时 2 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '1');
2020-11-11 16:13:31 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:13:31 | 耗时 15 ms | SQL 语句：
INSERT INTO login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('admin', '2020-11-11T16:13:31.816+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Mac OS X 10_13_5', 'Chrome 86');
2020-11-11 16:13:32 INFO  http-nio-9090-exec-7 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 2 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:13:44 INFO  http-nio-9090-exec-8 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:13:44 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:13:44 | 耗时 13 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:13:44 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:13:44 | 耗时 4 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '1');
2020-11-11 16:13:44 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:13:44 | 耗时 22 ms | SQL 语句：
INSERT INTO login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('admin', '2020-11-11T16:13:44.709+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Mac OS X 10_13_5', 'Chrome 86');
2020-11-11 16:13:44 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:13:44 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:13:44 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:13:44 | 耗时 5 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:13:44 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:13:44 | 耗时 14 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:17:58 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:17:58 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 16:17:58 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 16:17:58 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 16:17:58 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 16:18:08 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:18:08 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 34023 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:18:08 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:18:10 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:18:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:18:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:18:11 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 29ms. Found 0 Redis repository interfaces.
2020-11-11 16:18:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$eda40cab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$8617cc4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3fbcabaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$9788e4ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$c1de0874] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:12 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:18:12 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:18:12 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:18:12 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:18:12 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:18:12 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:18:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:13 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:18:14 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:18:14 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:18:14 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 16:18:14 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 16:18:14 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 16:18:14 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5955 ms
2020-11-11 16:18:14 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:18:17 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 16:18:17 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 16:18:17 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 16:18:17 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:18:18 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 16:18:18 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 16:18:18 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 16:18:18 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 16:18:18 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 16:18:19 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 16:18:20 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 16:18:20 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 16:18:20 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 16:18:20 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 16:18:20 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 16:18:20 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 13.276 seconds (JVM running for 14.884)
2020-11-11 16:18:21 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 16:18:21 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 16:18:21 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 16:18:21 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 16:18:21 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.161.247:9090/login
2020-11-11 16:18:23 INFO  http-nio-9090-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 16:18:23 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-11-11 16:18:23 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 18 ms
2020-11-11 16:18:23 INFO  http-nio-9090-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-11-11 16:18:25 INFO  http-nio-9090-exec-3 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 2 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:18:31 INFO  http-nio-9090-exec-4 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:18:31 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:18:31 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:18:31 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:18:31 | 耗时 2 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '1');
2020-11-11 16:18:31 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:18:31 | 耗时 8 ms | SQL 语句：
INSERT INTO login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('admin', '2020-11-11T16:18:31.639+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Mac OS X 10_13_5', 'Chrome 86');
2020-11-11 16:18:31 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:18:31 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:18:31 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:18:31 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:18:31 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:18:31 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:19:50 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:19:50 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 16:19:50 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 16:19:50 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 16:19:50 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 16:19:59 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:20:00 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 34040 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:20:00 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:20:02 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:20:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:20:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:20:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 41ms. Found 0 Redis repository interfaces.
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$eda40cab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$8617cc4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3fbcabaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$9788e4ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$c1de0874] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:03 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:20:03 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:20:04 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:20:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:20:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:20:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:20:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:20:06 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:20:06 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:20:06 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 16:20:06 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 16:20:06 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 16:20:06 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6609 ms
2020-11-11 16:20:07 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:20:08 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 16:20:08 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 16:20:08 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 16:20:08 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:20:09 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 16:20:09 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 16:20:09 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 16:20:09 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 16:20:09 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 16:20:10 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 16:20:10 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 16:20:10 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 16:20:10 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 16:20:10 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 16:20:10 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 16:20:10 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 11.947 seconds (JVM running for 13.754)
2020-11-11 16:20:10 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 16:20:10 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 16:20:10 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 16:20:10 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 16:20:10 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.161.247:9090/login
2020-11-11 16:20:18 INFO  http-nio-9090-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 16:20:18 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-11-11 16:20:18 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 21 ms
2020-11-11 16:20:18 INFO  http-nio-9090-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-11-11 16:20:19 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:20:19 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:20:19 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:20:19 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:20:19 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:20:19 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:20:24 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:20:24 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:20:24 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:20:24 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:20:24 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:20:24 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:21:36 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:21:37 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 16:21:37 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 16:21:37 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 16:21:37 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 16:21:45 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:21:46 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 34058 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:21:46 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:21:48 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:21:48 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:21:48 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:21:48 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 29ms. Found 0 Redis repository interfaces.
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3bda5dd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$d44e1d75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$8df2fcd0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$e5bf35d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$1014599a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:21:49 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:21:49 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:21:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:21:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:21:49 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:21:51 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:21:51 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:21:51 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 16:21:51 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 16:21:51 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 16:21:51 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5776 ms
2020-11-11 16:21:52 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:21:53 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 16:21:54 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 16:21:54 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 16:21:54 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:21:54 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 16:21:54 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 16:21:55 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 16:21:55 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 16:21:55 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 16:21:55 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 16:21:55 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 16:21:55 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 16:21:55 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 16:21:55 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 16:21:55 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 16:21:55 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 11.037 seconds (JVM running for 12.899)
2020-11-11 16:21:56 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 16:21:56 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 16:21:56 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 16:21:56 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 16:21:56 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.161.247:9090/login
2020-11-11 16:22:00 INFO  http-nio-9090-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 16:22:00 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-11-11 16:22:00 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 16 ms
2020-11-11 16:22:00 INFO  http-nio-9090-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-11-11 16:22:00 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:22:00 | 耗时 5 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:22:01 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:22:01 | 耗时 14 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:22:01 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:22:01 | 耗时 15 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:22:56 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:22:56 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 16:22:56 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 16:22:56 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 16:22:56 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 16:23:00 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:23:00 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 34069 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:23:00 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:23:03 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:23:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:23:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:23:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 46ms. Found 0 Redis repository interfaces.
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2c41e3c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$c4b5a36d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$7e5a82c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$d626bbcc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$7bdf92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:04 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:23:04 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:23:05 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:23:05 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:23:05 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:23:05 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:23:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:23:07 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:23:07 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:23:07 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 16:23:07 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 16:23:07 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 16:23:07 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6092 ms
2020-11-11 16:23:07 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:23:09 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 16:23:09 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 16:23:09 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 16:23:09 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:23:09 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 16:23:10 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 16:23:10 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 16:23:10 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 16:23:10 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 16:23:10 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 16:23:10 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 16:23:10 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 16:23:10 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 16:23:10 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 16:23:10 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 16:23:10 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 11.288 seconds (JVM running for 12.749)
2020-11-11 16:23:11 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 16:23:11 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 16:23:11 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 16:23:11 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 16:23:11 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.161.247:9090/login
2020-11-11 16:23:18 INFO  http-nio-9090-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 16:23:18 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-11-11 16:23:18 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 54 ms
2020-11-11 16:23:18 INFO  http-nio-9090-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-11-11 16:23:19 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:23:19 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:23:19 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:23:19 | 耗时 8 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:23:19 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:23:19 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:23:21 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:23:21 | 耗时 10 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 16:23:21 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:23:21 | 耗时 4 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 16:23:21 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:23:21 | 耗时 4 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:23:21 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:23:21 | 耗时 6 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:23:21 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:23:21 | 耗时 11 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 16:23:21 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:23:21 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 16:23:21 INFO  Febs-Async-Thread1 p6spy 2020-11-11 16:23:21 | 耗时 5 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T16:23:21.809+0800' WHERE (USERNAME = 'admin');
2020-11-11 16:24:51 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 16:24:51 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:24:51 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 16:24:51 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:24:51 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:24:51 | 耗时 6 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 16:24:51 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:24:51 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 16:24:51 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:24:51 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 16:25:03 INFO  http-nio-9090-exec-3 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:25:19 INFO  http-nio-9090-exec-4 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:25:19 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:25:19 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:25:19 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:25:19 | 耗时 4 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '1');
2020-11-11 16:25:19 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:25:19 | 耗时 11 ms | SQL 语句：
INSERT INTO login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('admin', '2020-11-11T16:25:19.436+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Mac OS X 10_13_5', 'Chrome 86');
2020-11-11 16:25:19 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:25:19 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:25:19 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:25:19 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:25:19 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:25:19 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:25:20 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:25:20 | 耗时 7 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 16:25:20 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:25:20 | 耗时 8 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 16:25:20 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:25:20 | 耗时 5 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:25:20 INFO  Febs-Async-Thread2 p6spy 2020-11-11 16:25:20 | 耗时 14 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T16:25:20.809+0800' WHERE (USERNAME = 'admin');
2020-11-11 16:25:20 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:25:20 | 耗时 3 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:25:20 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:25:20 | 耗时 4 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 16:25:20 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:25:20 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 16:28:00 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:28:01 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 16:28:01 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 16:28:01 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 16:28:01 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 16:28:06 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:28:06 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 34113 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:28:06 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:28:08 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:28:09 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:28:09 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:28:09 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$eda40cab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$8617cc4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3fbcabaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$9788e4ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$c1de0874] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:10 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:28:10 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:28:11 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:28:11 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:28:11 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:28:11 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:28:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:28:12 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:28:12 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:28:12 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 16:28:12 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 16:28:13 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 16:28:13 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6829 ms
2020-11-11 16:28:13 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:28:14 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 16:28:15 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 16:28:15 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 16:28:15 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:28:15 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 16:28:16 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 16:28:16 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 16:28:16 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 16:28:16 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 16:28:16 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 16:28:16 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 16:28:16 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 16:28:16 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 16:28:16 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 16:28:16 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 16:28:16 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 12.098 seconds (JVM running for 13.865)
2020-11-11 16:28:17 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 16:28:17 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 16:28:17 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 16:28:17 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 16:28:17 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.161.247:9090/login
2020-11-11 16:29:26 INFO  http-nio-9090-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 16:29:26 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-11-11 16:29:26 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 15 ms
2020-11-11 16:29:26 INFO  http-nio-9090-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-11-11 16:29:27 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:29:27 | 耗时 12 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:29:27 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:29:27 | 耗时 7 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:29:27 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:29:27 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:29:28 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:29:28 | 耗时 33 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 16:29:29 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:29:29 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 16:29:29 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:29:29 | 耗时 7 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:29:29 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:29:29 | 耗时 7 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:29:29 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:29:29 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 16:29:29 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:29:29 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 16:29:29 INFO  Febs-Async-Thread1 p6spy 2020-11-11 16:29:29 | 耗时 3 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T16:29:29.079+0800' WHERE (USERNAME = 'admin');
2020-11-11 16:29:32 INFO  http-nio-9090-exec-4 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:29:41 INFO  http-nio-9090-exec-5 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:29:41 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:29:41 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:29:41 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:29:41 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '1');
2020-11-11 16:29:41 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:29:41 | 耗时 17 ms | SQL 语句：
INSERT INTO login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('admin', '2020-11-11T16:29:41.173+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Mac OS X 10_13_5', 'Chrome 86');
2020-11-11 16:29:41 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:29:41 | 耗时 6 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:29:41 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:29:41 | 耗时 24 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:29:41 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:29:41 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:29:42 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:29:42 | 耗时 12 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 16:29:42 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:29:42 | 耗时 8 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 16:29:42 INFO  Febs-Async-Thread2 p6spy 2020-11-11 16:29:42 | 耗时 6 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T16:29:42.333+0800' WHERE (USERNAME = 'admin');
2020-11-11 16:29:42 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:29:42 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:29:42 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:29:42 | 耗时 12 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:29:42 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:29:42 | 耗时 4 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 16:29:42 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:29:42 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 16:29:50 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:29:50 | 耗时 4 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:29:50 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:29:50 | 耗时 5 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:29:50 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:29:50 | 耗时 5 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 16:29:50 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:29:50 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 16:29:51 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:29:51 | 耗时 12 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 16:30:15 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:30:15 | 耗时 6 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 16:30:19 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:30:19 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM role r WHERE 1 = 1;
2020-11-11 16:30:19 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:30:19 | 耗时 4 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 16:30:19 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:30:19 | 耗时 9 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM role r LEFT JOIN role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-11-11 16:30:29 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:30:29 | 耗时 8 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept ORDER BY ORDER_NUM ASC;
2020-11-11 16:30:42 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:30:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 16:30:42 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:30:42 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 16:31:26 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:31:26 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM role r WHERE 1 = 1;
2020-11-11 16:31:26 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:31:26 | 耗时 7 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM role r LEFT JOIN role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-11-11 16:31:26 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:31:26 | 耗时 13 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 16:31:28 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 16:31:28 | 耗时 5 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 16:31:45 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:31:45 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 16:31:45 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:31:45 | 耗时 11 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 16:31:45 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:31:45 | 耗时 6 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 16:32:13 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:32:13 | 耗时 11 ms | SQL 语句：
DELETE FROM menu WHERE MENU_ID IN ('101');
2020-11-11 16:32:13 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:32:13 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu WHERE (PARENT_ID IN ('101'));
2020-11-11 16:32:13 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:32:13 | 耗时 46 ms | SQL 语句：
DELETE FROM role_menu WHERE (MENU_ID IN ('101', '102', '109'));
2020-11-11 16:32:13 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:32:13 | 耗时 19 ms | SQL 语句：
DELETE FROM menu WHERE MENU_ID IN ('102', '109');
2020-11-11 16:32:13 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:32:13 | 耗时 3 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu WHERE (PARENT_ID IN ('102', '109'));
2020-11-11 16:32:13 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:32:13 | 耗时 8 ms | SQL 语句：
DELETE FROM role_menu WHERE (MENU_ID IN ('102', '109', '103', '104', '105', '106', '107', '108', '173', '110', '174'));
2020-11-11 16:32:13 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:32:13 | 耗时 10 ms | SQL 语句：
DELETE FROM menu WHERE MENU_ID IN ('103', '104', '105', '106', '107', '108', '173', '110', '174');
2020-11-11 16:32:13 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:32:13 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu WHERE (PARENT_ID IN ('103', '104', '105', '106', '107', '108', '173', '110', '174'));
2020-11-11 16:32:13 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:32:13 | 耗时 4 ms | SQL 语句：
DELETE FROM role_menu WHERE (MENU_ID IN ('103', '104', '105', '106', '107', '108', '173', '110', '174'));
2020-11-11 16:32:13 INFO  Febs-Async-Thread3 p6spy 2020-11-11 16:32:13 | 耗时 18 ms | SQL 语句：
INSERT INTO log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '删除菜单/按钮', 192, 'com.lyln.fabos.system.controller.MenuController.deleteMenus()', ' menuIds: "101"', '0:0:0:0:0:0:0:1', '2020-11-11T16:32:13.708+0800', '内网IP|0|0|内网IP|内网IP');
2020-11-11 16:32:13 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 16:32:13 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 16:32:15 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:32:15 | 耗时 27 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:32:15 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:32:15 | 耗时 6 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:32:15 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:32:15 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:32:16 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:32:16 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 16:32:16 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:32:16 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:32:16 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:32:16 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:32:16 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:32:16 | 耗时 8 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 16:32:16 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:32:16 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 16:32:16 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:32:16 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:32:16 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:32:16 | 耗时 3 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:32:16 INFO  Febs-Async-Thread4 p6spy 2020-11-11 16:32:16 | 耗时 3 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T16:32:16.767+0800' WHERE (USERNAME = 'admin');
2020-11-11 16:32:16 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:32:16 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 16:32:16 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:32:16 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 16:32:16 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:32:16 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 16:32:35 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:32:35 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 16:32:35 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:32:35 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 16:32:35 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:32:35 | 耗时 3 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 16:33:44 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:33:44 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:33:44 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:33:44 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '1');
2020-11-11 16:33:44 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:33:44 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept ORDER BY ORDER_NUM ASC;
2020-11-11 16:33:44 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:33:44 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 16:33:44 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:33:44 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM role;
2020-11-11 16:34:00 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:34:00 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM role r WHERE 1 = 1;
2020-11-11 16:34:00 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:34:00 | 耗时 3 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM role r LEFT JOIN role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-11-11 16:34:00 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:34:00 | 耗时 5 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 16:37:29 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:37:29 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:37:29 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:37:29 | 耗时 2 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:37:29 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:37:29 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:37:30 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:37:30 | 耗时 6 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 16:37:30 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:37:30 | 耗时 5 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 16:37:30 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:37:30 | 耗时 4 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 16:37:30 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:37:30 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:37:30 INFO  Febs-Async-Thread5 p6spy 2020-11-11 16:37:30 | 耗时 7 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T16:37:30.444+0800' WHERE (USERNAME = 'admin');
2020-11-11 16:37:30 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:37:30 | 耗时 5 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:37:30 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:37:30 | 耗时 4 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 16:37:30 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:37:30 | 耗时 4 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 16:37:36 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:37:37 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 16:37:37 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 16:37:37 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 16:37:37 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 16:37:43 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:37:43 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 34215 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:37:43 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:37:46 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:37:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:37:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:37:46 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 91ms. Found 0 Redis repository interfaces.
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$eda40cab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$8617cc4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3fbcabaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$9788e4ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$c1de0874] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:47 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:37:47 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:37:48 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:37:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:37:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:37:48 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:37:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:48 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:37:49 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:37:49 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:37:49 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 16:37:49 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 16:37:49 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 16:37:49 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6081 ms
2020-11-11 16:37:50 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:37:51 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 16:37:51 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 16:37:51 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 16:37:51 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:37:51 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 16:37:52 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 16:37:52 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 16:37:52 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 16:37:52 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 16:37:52 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 16:37:52 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 16:37:52 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 16:37:52 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 16:37:52 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 16:37:53 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 16:37:53 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 11.051 seconds (JVM running for 13.81)
2020-11-11 16:37:53 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 16:37:53 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 16:37:53 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 16:37:53 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 16:37:53 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.161.247:9090/login
2020-11-11 16:37:59 INFO  http-nio-9090-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 16:37:59 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-11-11 16:37:59 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 18 ms
2020-11-11 16:37:59 INFO  http-nio-9090-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-11-11 16:38:01 INFO  http-nio-9090-exec-4 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:38:10 INFO  http-nio-9090-exec-5 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:38:11 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:38:11 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:38:11 INFO  http-nio-9090-exec-6 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 2 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:38:16 INFO  http-nio-9090-exec-7 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:38:16 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:38:16 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:38:16 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:38:16 | 耗时 2 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '1');
2020-11-11 16:38:16 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:38:16 | 耗时 10 ms | SQL 语句：
INSERT INTO login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('admin', '2020-11-11T16:38:16.870+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Mac OS X 10_13_5', 'Chrome 86');
2020-11-11 16:38:16 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:38:16 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:38:17 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:38:17 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:38:17 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:38:17 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:38:18 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:38:18 | 耗时 15 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 16:38:18 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:38:18 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 16:38:18 INFO  Febs-Async-Thread1 p6spy 2020-11-11 16:38:18 | 耗时 11 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T16:38:18.373+0800' WHERE (USERNAME = 'admin');
2020-11-11 16:38:18 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:38:18 | 耗时 10 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:38:18 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:38:18 | 耗时 2 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:38:18 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:38:18 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 16:38:18 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:38:18 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 16:38:35 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:38:35 | 耗时 3 ms | SQL 语句：
UPDATE user SET MODIFY_TIME = '2020-11-11T16:38:35.789+0800', THEME = 'black', IS_TAB = '0' WHERE (USERNAME = 'admin');
2020-11-11 16:38:37 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:38:37 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:38:37 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:38:37 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:38:37 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:38:37 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:38:37 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 16:38:37 | 耗时 6 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 16:38:39 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:38:39 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:38:39 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:38:39 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:38:40 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:38:40 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 16:38:40 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:38:40 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 16:38:40 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:38:40 | 耗时 18 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 16:38:41 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:38:41 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM role r WHERE 1 = 1;
2020-11-11 16:38:41 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:38:41 | 耗时 4 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM role r LEFT JOIN role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-11-11 16:38:41 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:38:41 | 耗时 4 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 16:38:43 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 16:38:43 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 16:38:43 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:38:43 | 耗时 8 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 16:38:43 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 16:38:43 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 16:38:47 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:38:47 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM role r WHERE 1 = 1;
2020-11-11 16:38:47 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:38:47 | 耗时 11 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 16:38:47 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:38:47 | 耗时 8 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM role r LEFT JOIN role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-11-11 16:38:52 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:38:52 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 16:38:52 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:38:52 | 耗时 3 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 16:38:52 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:38:52 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 16:39:11 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:39:11 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = ' walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:39:11 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:39:11 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '8');
2020-11-11 16:39:11 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:39:11 | 耗时 5 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept ORDER BY ORDER_NUM ASC;
2020-11-11 16:39:11 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:39:11 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 16:39:11 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 16:39:11 | 耗时 5 ms | SQL 语句：
SELECT ROLE_ID, ROLE_NAME, REMARK, CREATE_TIME, MODIFY_TIME FROM role;
2020-11-11 16:39:29 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:39:29 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = ' walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:39:29 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:39:29 | 耗时 4 ms | SQL 语句：
UPDATE user SET DEPT_ID = 10, EMAIL = '', MOBILE = '', STATUS = '1', MODIFY_TIME = '2020-11-11T16:39:29.409+0800', SSEX = '2', DESCRIPTION = '注册用户' WHERE USER_ID = 8;
2020-11-11 16:39:29 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:39:29 | 耗时 9 ms | SQL 语句：
DELETE FROM user_role WHERE (USER_ID IN ('8'));
2020-11-11 16:39:29 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:39:29 | 耗时 3 ms | SQL 语句：
DELETE FROM user_data_permission WHERE (USER_ID IN ('8'));
2020-11-11 16:39:29 INFO  Febs-Async-Thread2 p6spy 2020-11-11 16:39:29 | 耗时 16 ms | SQL 语句：
INSERT INTO log (USERNAME, OPERATION, TIME, METHOD, PARAMS, IP, CREATE_TIME, LOCATION) VALUES ('admin', '修改用户', 70, 'com.lyln.fabos.system.controller.UserController.updateUser()', ' user: "User(userId=8, username=null, password=null, deptId=10, email=, mobile=, status=1, createTime=null, modifyTime=Wed Nov 11 16:39:29 CST 2020, lastLoginTime=null, sex=2, avatar=null, theme=null, isTab=null, description=注册用户, deptName=null, createTimeFrom=null, createTimeTo=null, roleId=1, roleName=null, deptIds=)"', '0:0:0:0:0:0:0:1', '2020-11-11T16:39:29.480+0800', '内网IP|0|0|内网IP|内网IP');
2020-11-11 16:39:29 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:39:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 16:39:29 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:39:29 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 16:39:33 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:39:33 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = ' walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:39:33 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:39:33 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '8');
2020-11-11 16:39:48 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:39:48 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 16:39:48 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:39:48 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:39:48 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 16:39:48 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:39:50 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 16:39:50 | 耗时 15 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 16:39:50 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:39:50 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 16:39:50 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:39:50 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:39:50 INFO  Febs-Async-Thread3 p6spy 2020-11-11 16:39:50 | 耗时 6 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T16:39:50.879+0800' WHERE (USERNAME = 'admin');
2020-11-11 16:39:50 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:39:50 | 耗时 4 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:39:50 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:39:50 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 16:39:50 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:39:50 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 16:39:54 INFO  http-nio-9090-exec-7 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:39:55 INFO  http-nio-9090-exec-1 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 2 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:40:03 INFO  http-nio-9090-exec-3 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:40:03 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:40:03 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:40:03 INFO  http-nio-9090-exec-10 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 3 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:40:10 INFO  http-nio-9090-exec-5 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:40:10 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:40:10 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:40:10 INFO  http-nio-9090-exec-4 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 4 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:40:20 INFO  http-nio-9090-exec-6 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:40:20 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:40:20 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:40:20 INFO  http-nio-9090-exec-8 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 5 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:40:21 INFO  http-nio-9090-exec-7 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 4 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:40:21 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:40:21 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:40:21 INFO  http-nio-9090-exec-9 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 6 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:41:44 INFO  http-nio-9090-exec-5 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:41:53 INFO  http-nio-9090-exec-4 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:41:53 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:41:53 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:41:53 INFO  http-nio-9090-exec-6 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 2 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:41:59 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:41:59 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 16:41:59 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 16:41:59 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 16:41:59 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 16:42:02 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 16:42:02 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 34258 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 16:42:02 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 16:42:05 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 16:42:06 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 16:42:06 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 16:42:06 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 51ms. Found 0 Redis repository interfaces.
2020-11-11 16:42:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$de463033] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$76b9efd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$305ecf32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$882b0836] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$b2802bfc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:07 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 16:42:07 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 16:42:07 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 16:42:07 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 16:42:07 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 16:42:07 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 16:42:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:07 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:08 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 16:42:09 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 16:42:09 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 16:42:09 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 16:42:09 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 16:42:09 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 16:42:09 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6270 ms
2020-11-11 16:42:09 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 16:42:11 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 16:42:11 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 16:42:11 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 16:42:11 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 16:42:11 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 16:42:12 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 16:42:12 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 16:42:12 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 16:42:12 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 16:42:12 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 16:42:12 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 16:42:12 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 16:42:12 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 16:42:12 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 16:42:13 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 16:42:13 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 11.508 seconds (JVM running for 13.117)
2020-11-11 16:42:13 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 16:42:13 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 16:42:13 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 16:42:13 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 16:42:13 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.161.247:9090/login
2020-11-11 16:42:29 INFO  http-nio-9090-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 16:42:29 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-11-11 16:42:29 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 29 ms
2020-11-11 16:42:29 INFO  http-nio-9090-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-11-11 16:42:29 INFO  http-nio-9090-exec-1 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:42:30 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:42:30 | 耗时 10 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:42:30 INFO  http-nio-9090-exec-1 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 3 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:43:34 INFO  http-nio-9090-exec-5 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 16:43:44 INFO  http-nio-9090-exec-6 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 16:43:44 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:43:44 | 耗时 7 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:43:44 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:43:44 | 耗时 2 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '8');
2020-11-11 16:43:45 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:43:45 | 耗时 8 ms | SQL 语句：
INSERT INTO login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('walker', '2020-11-11T16:43:44.982+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Mac OS X 10_13_5', 'Chrome 86');
2020-11-11 16:43:45 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:43:45 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'walker';
2020-11-11 16:43:45 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:43:45 | 耗时 8 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'walker' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:43:45 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:43:45 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:43:46 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:43:46 | 耗时 26 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'walker') ORDER BY m.order_num;
2020-11-11 16:43:47 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:43:47 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 16:43:47 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:43:47 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:43:47 INFO  Febs-Async-Thread1 p6spy 2020-11-11 16:43:47 | 耗时 6 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T16:43:47.131+0800' WHERE (USERNAME = 'walker');
2020-11-11 16:43:47 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:43:47 | 耗时 2 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:43:47 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:43:47 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 16:43:47 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 16:43:47 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'walker' GROUP BY days;
2020-11-11 16:44:15 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:44:15 | 耗时 4 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'walker';
2020-11-11 16:44:15 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 16:44:15 | 耗时 5 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'walker' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:44:16 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:44:16 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 16:44:16 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:44:16 | 耗时 4 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 16:44:16 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:44:16 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 16:44:16 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:44:16 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM role r WHERE 1 = 1;
2020-11-11 16:44:16 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:44:16 | 耗时 3 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM role r LEFT JOIN role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-11-11 16:44:16 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 16:44:16 | 耗时 4 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 16:44:18 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 16:44:18 | 耗时 6 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 16:44:20 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:44:20 | 耗时 5 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept ORDER BY ORDER_NUM ASC;
2020-11-11 16:45:44 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:45:44 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'walker';
2020-11-11 16:45:44 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:45:44 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'walker' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 16:45:44 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:45:44 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 16:45:46 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:45:46 | 耗时 6 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'walker') ORDER BY m.order_num;
2020-11-11 16:45:46 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 16:45:46 | 耗时 6 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'walker') ORDER BY m.order_num;
2020-11-11 16:45:47 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:45:47 | 耗时 5 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 16:45:47 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:45:47 | 耗时 4 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:45:47 INFO  Febs-Async-Thread2 p6spy 2020-11-11 16:45:47 | 耗时 8 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T16:45:47.397+0800' WHERE (USERNAME = 'walker');
2020-11-11 16:45:47 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:45:47 | 耗时 3 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 16:45:47 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:45:47 | 耗时 6 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 16:45:47 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 16:45:47 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'walker' GROUP BY days;
2020-11-11 16:46:23 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:46:23 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 16:46:23 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 16:46:23 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 16:46:23 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 16:46:23 | 耗时 6 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 17:14:45 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:14:45 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'walker';
2020-11-11 17:14:45 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:14:45 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'walker' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 17:14:45 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:14:45 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'walker' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 17:14:49 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 17:14:49 | 耗时 4 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'walker') ORDER BY m.order_num;
2020-11-11 17:14:50 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 17:14:50 | 耗时 8 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 17:14:50 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 17:14:50 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:14:50 INFO  Febs-Async-Thread3 p6spy 2020-11-11 17:14:50 | 耗时 7 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T17:14:50.304+0800' WHERE (USERNAME = 'walker');
2020-11-11 17:14:50 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 17:14:50 | 耗时 7 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:14:50 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 17:14:50 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 17:14:50 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 17:14:50 | 耗时 6 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'walker' GROUP BY days;
2020-11-11 17:14:54 INFO  http-nio-9090-exec-10 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 17:15:00 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 17:15:00 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 17:15:00 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 17:15:00 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 17:15:00 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 17:15:05 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 17:15:05 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 34539 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 17:15:05 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 17:15:07 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 17:15:08 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 17:15:08 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 17:15:08 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 29ms. Found 0 Redis repository interfaces.
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$de463033] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$76b9efd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$305ecf32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$882b0836] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$b2802bfc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 17:15:09 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 17:15:09 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 17:15:09 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 17:15:09 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 17:15:09 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:09 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:10 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:11 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:15:11 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 17:15:11 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 17:15:11 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 17:15:11 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 17:15:11 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 17:15:11 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5958 ms
2020-11-11 17:15:11 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 17:15:13 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 17:15:13 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 17:15:13 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 17:15:13 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 17:15:14 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 17:15:14 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 17:15:14 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 17:15:14 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 17:15:15 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 17:15:15 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 17:15:15 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 17:15:15 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 17:15:15 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 17:15:15 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 17:15:15 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 17:15:15 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 11.082 seconds (JVM running for 12.589)
2020-11-11 17:15:15 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 17:15:15 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 17:15:15 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 17:15:15 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 17:15:15 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://169.254.161.247:9090/login
2020-11-11 17:15:21 INFO  http-nio-9090-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 17:15:21 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-11-11 17:15:21 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 18 ms
2020-11-11 17:15:21 INFO  http-nio-9090-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-11-11 17:15:22 INFO  http-nio-9090-exec-2 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 2 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 17:15:29 INFO  http-nio-9090-exec-4 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 17:15:29 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:15:29 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 17:15:29 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:15:29 | 耗时 2 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '1');
2020-11-11 17:15:29 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:15:29 | 耗时 16 ms | SQL 语句：
INSERT INTO login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('admin', '2020-11-11T17:15:29.898+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Mac OS X 10_13_5', 'Chrome 86');
2020-11-11 17:15:30 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 17:15:30 | 耗时 3 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 17:15:30 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 17:15:30 | 耗时 7 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 17:15:30 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 17:15:30 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 17:15:31 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 17:15:31 | 耗时 7 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 17:15:32 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 17:15:32 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 17:15:32 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 17:15:32 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:15:32 INFO  Febs-Async-Thread1 p6spy 2020-11-11 17:15:32 | 耗时 8 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T17:15:32.261+0800' WHERE (USERNAME = 'admin');
2020-11-11 17:15:32 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 17:15:32 | 耗时 3 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:15:32 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 17:15:32 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 17:15:32 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 17:15:32 | 耗时 4 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 17:24:03 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 17:24:03 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 17:24:03 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 17:24:03 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 17:24:03 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 17:24:10 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 17:24:10 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 34612 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 17:24:10 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 17:24:13 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 17:24:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 17:24:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 17:24:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 59ms. Found 0 Redis repository interfaces.
2020-11-11 17:24:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$68b989cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$12d4973] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$bad228ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$129e61d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$3cf38598] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:15 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 17:24:15 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 17:24:15 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 17:24:15 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 17:24:15 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 17:24:15 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 17:24:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:24:17 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 17:24:17 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 17:24:17 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 17:24:17 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 17:24:17 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 17:24:17 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6377 ms
2020-11-11 17:24:17 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 17:24:18 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 17:24:18 INFO  main com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 17:24:18 INFO  main com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 17:24:18 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
2020-11-11 17:24:18 INFO  main org.apache.catalina.core.StandardService Stopping service [Tomcat]
2020-11-11 17:24:18 INFO  main org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-11-11 17:30:38 INFO  background-preinit org.hibernate.validator.internal.util.Version HV000001: Hibernate Validator 6.1.6.Final
2020-11-11 17:30:38 INFO  main com.lyln.fabos.FabosApplication Starting FabosApplication on WalkerdeMacBook-Air.local with PID 34672 (/Users/lijindong/codes/nginx-ui/fabos/target/classes started by lijindong in /Users/lijindong/codes/nginx-ui/fabos)
2020-11-11 17:30:38 INFO  main com.lyln.fabos.FabosApplication The following profiles are active: dev
2020-11-11 17:30:41 INFO  main org.springframework.context.annotation.AutoProxyRegistrar AutoProxyRegistrar was imported but no annotations were found having both 'mode' and 'proxyTargetClass' attributes of type AdviceMode and boolean respectively. This means that auto proxy creator registration and configuration may not have occurred as intended, and components may not be proxied as expected. Check to ensure that AutoProxyRegistrar has been @Import'ed on the same class where these annotations are declared; otherwise remove the import of AutoProxyRegistrar altogether.
2020-11-11 17:30:42 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-11 17:30:42 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-11 17:30:42 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 42ms. Found 0 Redis repository interfaces.
2020-11-11 17:30:43 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:43 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1bf92961] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:43 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:43 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:43 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'febsProperties' of type [com.lyln.fabos.common.properties.FebsProperties$$EnhancerBySpringCGLIB$$b46ce905] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:43 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroConfig' of type [com.lyln.fabos.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$6e11c860] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'mybatisPlusConfigure' of type [com.lyln.fabos.common.configure.MybatisPlusConfigure$$EnhancerBySpringCGLIB$$c5de0164] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataPermissionInterceptor' of type [com.lyln.fabos.common.interceptor.DataPermissionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'desensitizationInterceptor' of type [com.lyln.fabos.common.interceptor.DesensitizationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$f033252a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSourceCreator' of type [com.baomidou.dynamic.datasource.creator.DataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:44 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:44 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource detect P6SPY plugin and enabled it
2020-11-11 17:30:44 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-11-11 17:30:45 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-11-11 17:30:45 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource [base] wrap p6spy plugin
2020-11-11 17:30:45 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource - load a datasource named [base] success
2020-11-11 17:30:45 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource initial loaded [1] datasource,primary datasource named [base]
2020-11-11 17:30:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:45 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMenuServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'menuServiceImpl' of type [com.lyln.fabos.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userRoleServiceImpl' of type [com.lyln.fabos.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionMapper' of type [com.sun.proxy.$Proxy119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userDataPermissionService' of type [com.lyln.fabos.system.service.impl.UserDataPermissionServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'userServiceImpl' of type [com.lyln.fabos.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'roleServiceImpl' of type [com.lyln.fabos.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'shiroRealm' of type [com.lyln.fabos.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:46 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-11 17:30:47 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 9090 (http)
2020-11-11 17:30:47 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-9090"]
2020-11-11 17:30:47 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-11-11 17:30:47 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-11 17:30:47 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-11-11 17:30:47 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 8714 ms
2020-11-11 17:30:47 INFO  main com.lyln.fabos.common.xss.XssFilter ------------ xss filter init ------------
2020-11-11 17:30:50 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-11-11 17:30:50 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-11-11 17:30:50 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService
2020-11-11 17:30:50 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'febsAsyncThreadPool'
2020-11-11 17:30:50 INFO  main org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping Adding welcome page template: index
2020-11-11 17:30:51 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-9090"]
2020-11-11 17:30:51 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 9090 (http) with context path ''
2020-11-11 17:30:51 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-11-11 17:30:52 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-11-11 17:30:52 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-11-11 17:30:52 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getDeptTreeUsingGET_1
2020-11-11 17:30:52 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_1
2020-11-11 17:30:52 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_2
2020-11-11 17:30:52 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: exportUsingGET_3
2020-11-11 17:30:52 INFO  main springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: indexUsingGET_1
2020-11-11 17:30:52 INFO  main com.lyln.fabos.FabosApplication Started FabosApplication in 16.051 seconds (JVM running for 17.756)
2020-11-11 17:30:53 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner  __    ___   _      ___   _     ____ _____  ____ 
2020-11-11 17:30:53 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2020-11-11 17:30:53 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2020-11-11 17:30:53 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner                                                       
2020-11-11 17:30:53 INFO  main com.lyln.fabos.common.runner.FabosStartedUpRunner FABOS 权限系统启动完毕，地址：http://10.2.154.94:9090/login
2020-11-11 17:30:57 INFO  http-nio-9090-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-11 17:30:57 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-11-11 17:30:57 INFO  http-nio-9090-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 45 ms
2020-11-11 17:30:57 INFO  http-nio-9090-exec-1 org.apache.shiro.session.mgt.AbstractValidatingSessionManager Enabling session validation scheduler...
2020-11-11 17:30:59 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:30:59 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 17:30:59 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:30:59 | 耗时 1 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:30:59 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:30:59 | 耗时 3 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:30:59 INFO  Febs-Async-Thread1 p6spy 2020-11-11 17:30:59 | 耗时 3 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T17:30:59.012+0800' WHERE (USERNAME = 'admin');
2020-11-11 17:30:59 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:30:59 | 耗时 10 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 17:30:59 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:30:59 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 17:31:08 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 17:31:08 | 耗时 2 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 17:31:08 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 17:31:08 | 耗时 3 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 17:31:08 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 17:31:08 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 17:31:09 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 17:31:09 | 耗时 4 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 17:31:09 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 17:31:09 | 耗时 34 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 17:31:09 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 17:31:09 | 耗时 24 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 17:36:22 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:36:22 | 耗时 5 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 17:36:22 INFO  Febs-Async-Thread2 p6spy 2020-11-11 17:36:22 | 耗时 7 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T17:36:22.971+0800' WHERE (USERNAME = 'admin');
2020-11-11 17:36:23 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:36:23 | 耗时 6 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:36:23 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:36:23 | 耗时 4 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:36:23 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:36:23 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 17:36:23 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:36:23 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 17:36:25 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 17:36:25 | 耗时 3 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 17:36:25 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 17:36:25 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 17:36:26 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 17:36:26 | 耗时 18 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 17:36:26 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 17:36:26 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM role r WHERE 1 = 1;
2020-11-11 17:36:26 INFO  http-nio-9090-exec-10 p6spy 2020-11-11 17:36:26 | 耗时 3 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM role r LEFT JOIN role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-11-11 17:36:26 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 17:36:26 | 耗时 6 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 17:36:27 INFO  http-nio-9090-exec-3 p6spy 2020-11-11 17:36:27 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 17:36:28 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 17:36:28 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept ORDER BY ORDER_NUM ASC;
2020-11-11 17:37:10 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 17:37:10 | 耗时 5 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 17:37:45 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 17:37:45 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 17:37:45 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 17:37:45 | 耗时 2 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 17:37:45 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 17:37:45 | 耗时 22 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 17:37:47 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 17:37:47 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 17:37:47 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 17:37:47 | 耗时 2 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:37:47 INFO  Febs-Async-Thread3 p6spy 2020-11-11 17:37:47 | 耗时 6 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T17:37:47.938+0800' WHERE (USERNAME = 'admin');
2020-11-11 17:37:47 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 17:37:47 | 耗时 2 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:37:47 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 17:37:47 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 17:37:47 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 17:37:47 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 17:38:42 INFO  http-nio-9090-exec-3 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_get_captcha127.0.0.1]，描述为 [获取验证码] 的接口
2020-11-11 17:38:49 INFO  http-nio-9090-exec-5 com.lyln.fabos.common.aspect.LimitAspect IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2020-11-11 17:38:49 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 17:38:49 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 17:38:49 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 17:38:49 | 耗时 1 ms | SQL 语句：
SELECT USER_ID, dept_id FROM user_data_permission WHERE (USER_ID = '1');
2020-11-11 17:38:49 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 17:38:49 | 耗时 11 ms | SQL 语句：
INSERT INTO login_log (USERNAME, LOGIN_TIME, LOCATION, IP, `SYSTEM`, BROWSER) VALUES ('admin', '2020-11-11T17:38:49.127+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Mac OS X 10_13_5', 'Chrome 86');
2020-11-11 17:38:49 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 17:38:49 | 耗时 1 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 17:38:49 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 17:38:49 | 耗时 4 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 17:38:49 INFO  http-nio-9090-exec-6 p6spy 2020-11-11 17:38:49 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.password, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, u.theme, u.is_tab isTab, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE u.username = 'admin' GROUP BY u.username, u.user_id, u.email, u.mobile, u.password, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar, u.theme, u.is_tab;
2020-11-11 17:38:49 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 17:38:49 | 耗时 12 ms | SQL 语句：
SELECT m.* FROM menu m WHERE m.type <> 1 AND m.MENU_ID IN (SELECT DISTINCT rm.menu_id FROM role_menu rm LEFT JOIN role r ON (rm.role_id = r.role_id) LEFT JOIN user_role ur ON (ur.role_id = r.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin') ORDER BY m.order_num;
2020-11-11 17:38:50 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 17:38:50 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 17:38:50 INFO  Febs-Async-Thread4 p6spy 2020-11-11 17:38:50 | 耗时 5 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T17:38:50.139+0800' WHERE (USERNAME = 'admin');
2020-11-11 17:38:50 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 17:38:50 | 耗时 7 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:38:50 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 17:38:50 | 耗时 3 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:38:50 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 17:38:50 | 耗时 11 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 17:38:50 INFO  http-nio-9090-exec-1 p6spy 2020-11-11 17:38:50 | 耗时 2 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 17:38:55 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:38:55 | 耗时 4 ms | SQL 语句：
SELECT r.* FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) WHERE u.username = 'admin';
2020-11-11 17:38:55 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:38:55 | 耗时 5 ms | SQL 语句：
SELECT m.perms FROM role r LEFT JOIN user_role ur ON (r.role_id = ur.role_id) LEFT JOIN user u ON (u.user_id = ur.user_id) LEFT JOIN role_menu rm ON (rm.role_id = r.role_id) LEFT JOIN menu m ON (m.menu_id = rm.menu_id) WHERE u.username = 'admin' AND m.perms IS NOT NULL AND m.perms <> '';
2020-11-11 17:38:55 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:38:55 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 17:38:55 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:38:55 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 17:38:55 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 17:38:55 | 耗时 4 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 17:38:56 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 17:38:56 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM role r WHERE 1 = 1;
2020-11-11 17:38:56 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 17:38:56 | 耗时 15 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 17:38:56 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 17:38:56 | 耗时 8 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM role r LEFT JOIN role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-11-11 17:38:56 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 17:38:56 | 耗时 4 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 17:39:00 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:39:00 | 耗时 3 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 17:39:00 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:39:00 | 耗时 6 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:39:00 INFO  Febs-Async-Thread5 p6spy 2020-11-11 17:39:00 | 耗时 7 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T17:39:00.323+0800' WHERE (USERNAME = 'admin');
2020-11-11 17:39:00 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:39:00 | 耗时 9 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:39:00 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:39:00 | 耗时 23 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 17:39:00 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:39:00 | 耗时 3 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 17:39:07 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:39:07 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM user u WHERE 1 = 1;
2020-11-11 17:39:07 INFO  http-nio-9090-exec-4 p6spy 2020-11-11 17:39:07 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.email, u.mobile, u.status, u.create_time createTime, u.ssex sex, u.dept_id deptId, u.last_login_time lastLoginTime, u.modify_time modifyTime, u.description, u.avatar, d.dept_name deptName, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM user u LEFT JOIN dept d ON (u.dept_id = d.dept_id) LEFT JOIN user_role ur ON (u.user_id = ur.user_id) LEFT JOIN role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username, u.user_id, u.email, u.mobile, u.status, u.create_time, u.ssex, u.dept_id, u.last_login_time, u.modify_time, u.description, u.avatar ORDER BY userId ASC LIMIT 0,10;
2020-11-11 17:39:07 INFO  http-nio-9090-exec-5 p6spy 2020-11-11 17:39:07 | 耗时 7 ms | SQL 语句：
SELECT DEPT_ID, PARENT_ID, DEPT_NAME, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM dept;
2020-11-11 17:39:08 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 17:39:08 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM role r WHERE 1 = 1;
2020-11-11 17:39:08 INFO  http-nio-9090-exec-7 p6spy 2020-11-11 17:39:08 | 耗时 11 ms | SQL 语句：
SELECT r.role_id roleId, r.role_name roleName, r.remark, r.create_time createTime, r.modify_time modifyTime, GROUP_CONCAT(rm.menu_id) menuIds FROM role r LEFT JOIN role_menu rm ON (r.role_id = rm.role_id) WHERE 1 = 1 GROUP BY r.role_id ORDER BY createTime DESC LIMIT 0,10;
2020-11-11 17:39:08 INFO  http-nio-9090-exec-8 p6spy 2020-11-11 17:39:08 | 耗时 3 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 17:39:09 INFO  http-nio-9090-exec-9 p6spy 2020-11-11 17:39:09 | 耗时 5 ms | SQL 语句：
SELECT MENU_ID, PARENT_ID, MENU_NAME, URL, PERMS, ICON, TYPE, ORDER_NUM, CREATE_TIME, MODIFY_TIME FROM menu ORDER BY ORDER_NUM ASC;
2020-11-11 17:39:52 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:39:52 | 耗时 13 ms | SQL 语句：
SELECT count(1) FROM login_log;
2020-11-11 17:39:52 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:39:52 | 耗时 9 ms | SQL 语句：
SELECT count(1) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:39:52 INFO  Febs-Async-Thread1 p6spy 2020-11-11 17:39:52 | 耗时 18 ms | SQL 语句：
UPDATE user SET LAST_LOGIN_TIME = '2020-11-11T17:39:52.915+0800' WHERE (USERNAME = 'admin');
2020-11-11 17:39:52 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:39:52 | 耗时 2 ms | SQL 语句：
SELECT count(DISTINCT (ip)) FROM login_log WHERE login_time BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 DAY);
2020-11-11 17:39:52 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:39:52 | 耗时 5 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 GROUP BY days;
2020-11-11 17:39:53 INFO  http-nio-9090-exec-2 p6spy 2020-11-11 17:39:53 | 耗时 4 ms | SQL 语句：
SELECT date_format(l.login_time, '%m-%d') days, count(1) count FROM (SELECT * FROM login_log WHERE date_sub(curdate(), INTERVAL 10 day) <= date(login_time)) AS l WHERE 1 = 1 AND l.username = 'admin' GROUP BY days;
2020-11-11 17:55:36 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'febsAsyncThreadPool'
2020-11-11 17:55:37 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource start closing ....
2020-11-11 17:55:37 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-11-11 17:55:37 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-11-11 17:55:37 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource dynamic-datasource all closed success,bye
